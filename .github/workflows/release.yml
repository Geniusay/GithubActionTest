name: 根据模块名推送不同模块的镜像

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      env: ${{ steps.extract.outputs.env }}
      module: ${{ steps.extract.outputs.module }}
      version: ${{ steps.extract.outputs.version }}
      skip: ${{steps.extract.outputs.skip}}

    steps:
      - name: Checkout Auto Label
        uses: actions/checkout@v2

      - name: Check Commit Message
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"<Auto>"* ]]; then
            echo "Commit message contains <Auto>. Proceeding with the workflow."
          else
            echo "Commit message does not contain <Auto>. Skipping the workflow."
            exit 78 
          fi

      - name: Get Commit Info
        id: extract
        run: |
          commit_message="${{ github.event.head_commit.message }}"
          echo "Commit Message: $commit_message"
          
          if [[ "$commit_message" =~ -e:([^\ ]*)\ -m:([^\ ]*)\ -v:([^\ ]*) -skip:([^\ ]*) ]]; then
            env="${BASH_REMATCH[1]}"
            module="${BASH_REMATCH[2]}"
            version="${BASH_REMATCH[3]}"
            skip="${BASH_REMATCH[4]}"
          
            echo "Environment: $env"
            echo "Module: $module"
            echo "Version: $version"
            echo "Skip: $skip"
          
            echo "ENV=$env" >> $GITHUB_ENV
            echo "MODULE=$module" >> $GITHUB_ENV
            echo "VERSION=$version" >> $GITHUB_ENV
            echo "SKIP=$version" >> $GITHUB_ENV
          else
            echo "No match found."
            exit 1
          fi

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn package -Dmaven.test.skip=true

      - name: Build and Push Docker Images
        if: ${{$SKIP != 'image'}}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PWD }}
        run: |
          echo "Module Name: $MODULE"
          cd $MODULE
          mkdir docker
          cp ./Dockerfile ./docker
          cp ./target/*.jar ./docker
          cd docker
          docker build -t $DOCKER_USERNAME/$MODULE:$VERSION .
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push $DOCKER_USERNAME/$MODULE:$VERSION

      - name: Run Image In Test Server
        if: ${{ $ENV == 'test' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_ADDRESS }}
          port: 22
          username: root
          password: ${{ secrets.SSH_TEST_KEY }}
        run: |
          docker pull $DOCKER_USERNAME/$MODULE:$VERSION


