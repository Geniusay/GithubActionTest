name: 根据模块名推送不同模块的镜像

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      env: ${{ steps.extract.outputs.env }}
      module: ${{ steps.extract.outputs.module }}
      version: ${{ steps.extract.outputs.version }}

    steps:
      - name: Checkout Auto Label
        uses: actions/checkout@v2

      - name: Check Commit Message
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"<Auto>"* ]]; then
            echo "Commit message contains <Auto>. Proceeding with the workflow."
          else
            echo "Commit message does not contain <Auto>. Skipping the workflow."
            exit 78 
          fi

      - name: Get Commit Info
        id: extract
        run: |
          commit_message="${{ github.event.head_commit.message }}"
          echo "Commit Message: $commit_message"
          
          if [[ "$commit_message" =~ -e:([^\ ]*)\ -m:([^\ ]*)\ -v:([^\ ]*) ]]; then
            env="${BASH_REMATCH[1]}"
            module="${BASH_REMATCH[2]}"
            version="${BASH_REMATCH[3]}"
          
            echo "Environment: $env"
            echo "Module: $module"
            echo "Version: $version"
          
            echo "::set-output name=env::$env"
            echo "::set-output name=module::$module"
            echo "::set-output name=version::$version"
          else
            echo "No match found."
            exit 1
          fi
      - name: Use Extracted Info
        run: |
          echo "Using extracted info:"
          echo "Environment: ${{ needs.extract.outputs.env }}"
          echo "Module: ${{ needs.extract.outputs.module }}"
          echo "Version: ${{ needs.extract.outputs.version }}"

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn package -Dmaven.test.skip=true

      - name: Build and Push Docker Images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PWD }}
        run: |
          echo "Module Name: $module"
          cd $module
          mkdir docker
          cp ./Dockerfile ./docker
          cp ./target/*.jar ./docker
          cd docker
          docker build -t $DOCKER_USERNAME/$module:$version .
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push $DOCKER_USERNAME/$module
          
