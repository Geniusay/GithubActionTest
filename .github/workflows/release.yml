name: 根据模块名推送不同模块的镜像

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Auto Label
        uses: actions/checkout@v2

      - name: Check Commit Message
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"<Auto>"* ]]; then
            echo "Commit message contains <Auto>. Proceeding with the workflow."
          else
            echo "Commit message does not contain <Auto>. Skipping the workflow."
            exit 78 
          fi

      - name: Get Commit Info
        id: commit_info
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
          echo "$COMMIT_MESSAGE"
          ENV=$(echo "$COMMIT_MESSAGE" | grep -oP '(?<=\[)[^\]]*(?=:)')
          MODULE=$(echo "$COMMIT_MESSAGE" | grep -oP '(?<=:)[^\]]*(?=\])')
          VERSION=$(echo "$COMMIT_MESSAGE" | grep -oP '(?<=\s)[^\s]*$')
          
          if [[ $commit_message =~ <Auto> \[([^[:space:]]+) ([^[:space:]]+) ([^[:space:]]+)\] ]]; then
            env="${BASH_REMATCH[1]}"
            module="${BASH_REMATCH[2]}"
            version="${BASH_REMATCH[3]}"
          
            echo "Environment: $env"
            echo "Module: $module"
            echo "Version: $version"
          else
            echo "No match found."
            exit 1
          fi

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn package -Dmaven.test.skip=true

      - name: Build and Push Docker Images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PWD }}
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          MODULE_NAME=$(echo "$COMMIT_MESSAGE" | grep -oP '\[([^]]+)\]' | sed 's/\[\(.*\)\]/\1/')
          echo "Module Name: $MODULE_NAME"
          cd $MODULE_NAME
          mkdir docker
          cp ./Dockerfile ./docker
          cp ./target/*.jar ./docker
          cd docker
          docker build -t $DOCKER_USERNAME/$MODULE_NAME .
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push $DOCKER_USERNAME/$MODULE_NAME
          
